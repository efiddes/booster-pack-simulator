{"version":3,"sources":["images/mtg-back.jpg","contexts/BoosterContext.js","contexts/LoadingContext.js","components/Filter.js","components/Card.js","components/Loader.js","components/Booster.js","calls/booster.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BoosterContext","createContext","standard","BoosterContextProvider","props","useState","rarity","pageSize","isRequested","booster","setBooster","set","length","boosterPack","setBoosterPack","Provider","value","updateRequested","newBooster","map","obj","Object","assign","createBooster","console","log","children","LoadingContext","LoadingContextProvider","isLoading","setIsLoading","Filter","useContext","boosterSet","setBoosterSet","className","onSubmit","event","preventDefault","key","htmlFor","type","id","name","onChange","defaultChecked","item","e","target","checked","charAt","toUpperCase","slice","disabled","Card","image","number","flipped","setFlipped","onClick","src","back","alt","Loader","Booster","fetchedData","dependencies","setFetchedData","urls","filter","quantity","forEach","names","getOwnPropertyNames","values","url","i","Math","random","push","useEffect","Array","isArray","a","async","Promise","all","fetch","then","response","ok","Error","json","data","catch","err","useGenerateCards","object","cards","card","hasOwnProperty","imageUrl","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad492c8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mtg-back.dd611d53.jpg\";","import React, { createContext, useState } from 'react';\r\n\r\nexport const BoosterContext = createContext();\r\n\r\nconst standard = [\"grn\", \"rna\", \"war\", \"m20\", \"eld\"]; //, \"thb\"];\r\n\r\nconst BoosterContextProvider = (props) => {\r\n    const [booster, setBooster] = useState([\r\n        {rarity: 'rare', pageSize: 1, isRequested: true},\r\n        {rarity: 'uncommon', pageSize: 3, isRequested: true},\r\n        {rarity: 'common', pageSize: 10, isRequested: true},\r\n        {rarity: 'basic', pageSize: 1, isRequested: true}\r\n    ]);\r\n    const [boosterPack, setBoosterPack ] = useState({set: standard[standard.length -1], booster});\r\n    \r\n    const updateRequested = (rarity) => {\r\n        let newBooster = booster.map(obj => {\r\n            return obj.rarity === rarity ? Object.assign(obj, { isRequested: !obj.isRequested}) : obj\r\n        });\r\n        setBooster(newBooster);\r\n    }\r\n    \r\n    const createBooster = (set) => {\r\n        setBoosterPack({ set, booster});\r\n        console.log(\"buildabooster\", boosterPack);\r\n    }\r\n\r\n    return (\r\n        <BoosterContext.Provider value={{standard, booster, updateRequested, boosterPack, createBooster}}>\r\n        { props.children }\r\n    </BoosterContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BoosterContextProvider;","import React, { createContext, useState } from 'react';\r\n\r\nexport const LoadingContext = createContext();\r\n\r\nconst LoadingContextProvider = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    return (\r\n        <LoadingContext.Provider value={{isLoading, setIsLoading}}>\r\n            { props.children }\r\n        </LoadingContext.Provider>\r\n        )\r\n}\r\n\r\nexport default LoadingContextProvider;","import React, { useState, useContext } from 'react';\r\n\r\nimport { BoosterContext } from '../contexts/BoosterContext';\r\nimport { LoadingContext } from '../contexts/LoadingContext';\r\nimport './filter.css';\r\n\r\nconst Filter = () => {\r\n    const { standard, booster, updateRequested, createBooster } = useContext(BoosterContext);\r\n    const { isLoading } = useContext(LoadingContext);\r\n    const [boosterSet, setBoosterSet] = useState(standard[standard.length -1]);\r\n\r\n    function HandleSubmit(event) {\r\n        event.preventDefault();\r\n        createBooster(boosterSet);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"filters\">\r\n            <form onSubmit={HandleSubmit}>\r\n                <h3>Filter Options:</h3>\r\n                <div className=\"filter-set\">\r\n                {standard.map( (set) => (\r\n                    <label key={set} htmlFor={set}>\r\n                        <input type=\"radio\"\r\n                            id={set} \r\n                            name=\"sets\"\r\n                            value={set}\r\n                            onChange={() => setBoosterSet(set)}\r\n                            defaultChecked={boosterSet === set}\r\n                        />\r\n                        <i className={\"ss ss-\" + set + \" ss-4x\"}></i>\r\n                    </label>\r\n                ))}\r\n                </div>\r\n\r\n                <ul className=\"filter-list\">\r\n                    {booster.map( (item) => (\r\n                        <li key={item.rarity}>\r\n                            <input type=\"checkbox\"\r\n                                name={item.rarity}\r\n                                onChange={(e) => updateRequested(e.target.name)}\r\n                                checked={item.isRequested} \r\n                            />\r\n                            <label htmlFor={item.rarity}>\r\n                                {item.rarity.charAt(0).toUpperCase() + item.rarity.slice(1)}\r\n                            </label>\r\n                            <input type=\"text\"\r\n                                name={item.rarity + \"-quant\"} \r\n                                value={item.pageSize} \r\n                                disabled={true}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <button disabled={isLoading} type=\"submit\">New Booster</button> \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\n\r\nimport './card.css';\r\nimport back from '../images/mtg-back.jpg';\r\n\r\nconst Card = ({name, image, number}) => {\r\n\r\n    const [flipped, setFlipped] = useState(false);\r\n\r\n    const flipOver = () => setFlipped(true);\r\n\r\n    return (\r\n        <div className={flipped ? \"card flipped\" : \"card\"} onClick={flipOver}>\r\n            <div className=\"cardBack\">\r\n                <img className={flipped ? \"image\" : \"image hover\"} src={back} alt={name} number={number} />\r\n            </div>\r\n            <div className=\"cardFront\">\r\n                <img className=\"image\" src={image ? image : back} alt={name} number={number} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"colour-wheel\">\r\n                <div className=\"w-mana\"></div>\r\n                <div className=\"between\">\r\n                    <div className=\"g-mana\"></div>\r\n                    <div className=\"u-mana\"></div>\r\n                </div>\r\n                <div className=\"evenly\">\r\n                    <div className=\"r-mana\"></div>\r\n                    <div className=\"b-mana\"></div>\r\n                </div>\r\n            </div>\r\n            <p className=\"loader-caption\">Sealing Booster</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useContext } from 'react';\r\n\r\nimport './booster.css';\r\nimport Card from './Card';\r\nimport Loader from './Loader';\r\nimport { BoosterContext } from '../contexts/BoosterContext';\r\nimport { LoadingContext } from '../contexts/LoadingContext';\r\nimport { useGenerateCards } from '../calls/booster.js';\r\n\r\n\r\nconst Booster = () => {\r\n\r\n    const { boosterPack } = useContext(BoosterContext);\r\n    const { isLoading } = useContext(LoadingContext);\r\n    const fetchedData = useGenerateCards(boosterPack, [boosterPack]);\r\n\r\n    return (\r\n        <div className=\"cards-container\">\r\n        {/* {isLoading ? <Loader/> : fetchedData.map(object => (object.cards).map(card =>  */}\r\n        {isLoading ? <Loader/> : fetchedData.map(object => (object.cards).filter(card => (card.hasOwnProperty('imageUrl')).map(card =>\r\n            <Card \r\n                key={card.number} \r\n                name={card.name} \r\n                image={card.imageUrl}\r\n                number={card.number}\r\n            />\r\n                //)\r\n        )))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Booster;\r\n","import {useState, useEffect, useContext } from 'react';\r\nimport { LoadingContext } from '../contexts/LoadingContext';\r\n\r\nexport const useGenerateCards = (boosterPack, dependencies) => {\r\n\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n    const { setIsLoading } = useContext(LoadingContext);\r\n    \r\n    let set = boosterPack.set;\r\n    let urls = [];\r\n\r\n    // Remove isRequest false objects\r\n    (boosterPack.booster).filter(quantity => quantity.isRequested || quantity.pageSize === 0).forEach(obj => {\r\n        let names = Object.getOwnPropertyNames(obj);\r\n        let values = Object.values(obj);\r\n        let url = `https://api.magicthegathering.io/v1/cards?set=${set}`;\r\n  \r\n        for (let i = 0; i < names.length; i++) {\r\n            if ( values[i] === \"rare\" ) {\r\n                url +=`&${names[i]}=`;\r\n                // 12.5% chance booster rare will be mythic rare\r\n                url += Math.random() > 0.125 ? 'rare' : 'mythic';\r\n            } \r\n            else if ( values[i] === \"basic\" ) {\r\n                url +=`&type=${values[i]}`;\r\n            } \r\n            else if (names[i] === \"pageSize\") {\r\n                url +=`&${names[i]}=`;\r\n                /* The mtg api has an issue where it doesn't always return results that include an image\r\n                In order to improve my chances of always receiving enough imageUrls I am therefore inflating \r\n                the requested numbers which I will then filter down.*/\r\n                values[i] < 10 ? url +=  values[i] * 5 : url += values[i] * 2; \r\n                break;\r\n            } \r\n            else if (names[i] === \"isRequested\") {\r\n                break;\r\n            } \r\n            else {\r\n                url +=`&${names[i]}=${values[i]}`;\r\n            } \r\n        }\r\n\r\n        url += \"&random=true&contains=imageUrl\";\r\n        urls.push(url);\r\n    });\r\n    console.log(\"urls\", urls);\r\n    // fetch('https://api.magicthegathering.io/v1/cards?set=eld&rarity=$rare&pageSize=1&random=true&contains=imageUrl');\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        if (Array.isArray(urls) && urls.length) {\r\n            (async function getCards() {\r\n                Promise.all(urls.map(url =>\r\n                    fetch(url)\r\n                    .then(response => {\r\n                        if (!response.ok) {\r\n                        throw new Error('Failed to fetch.');\r\n                        }\r\n                        return response.json();\r\n                    })\r\n                ))\r\n                .then(data => {\r\n                    setFetchedData(data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    setIsLoading(false);\r\n                })\r\n            })()\r\n        }\r\n    }, dependencies);\r\n\r\n    console.log(\"fetched\", fetchedData);\r\n\r\n    // let filteredData = fetchedData.map(object => (object.cards).filter(card => card.hasOwnProperty('imageUrl') ? console.log(\"card\", card) : console.log(\"nope\")));\r\n\r\n    // console.log(\"filtered\", filteredData);\r\n    // (boosterPack.booster).filter(quantity => quantity.isRequested || quantity.pageSize === 0).forEach(obj => {\r\n    \r\n    return fetchedData;\r\n};","import React from 'react';\n\nimport './App.css';\n\nimport Filter from './components/Filter';\nimport Booster from './components/Booster';\nimport BoosterContextProvider from './contexts/BoosterContext';\nimport LoadingContextProvider from './contexts/LoadingContext';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h2>Booster Pack Simulator</h2>\n      </header>\n      <BoosterContextProvider>\n        <LoadingContextProvider>\n            <Filter/>\n            <Booster />\n        </LoadingContextProvider>\n      </BoosterContextProvider>\n      <footer>By Ethan Fiddes</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}